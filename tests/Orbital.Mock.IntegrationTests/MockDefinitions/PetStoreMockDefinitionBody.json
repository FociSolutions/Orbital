{
  "scenarios": [
    {
      "id": "0ecfe4ec-3830-4885-bf0e-6b784dc7d2af",
      "metadata": {
        "title": "Get List Success",
        "description": "Retrieves a list of pets"
      },
      "verb": 0,
      "path": "/pets",
      "response": {
        "headers": {},
        "status": "200",
        "body": "{\n  \"pets\": [\n    {\n      \"id\": \"1\",\n      \"name\": \"Doggy\",\n      \"type\": \"dog\",\n      \"description\": \"Is sometimes good boy\"\n    },\n    {\n      \"id\": \"2\",\n      \"name\": \"Hamtaro\",\n      \"type\": \"hampster\",\n      \"description\": \"Likes trail mix when he has not eaten it for a while\"\n    },\n    {\n      \"id\": \"3\",\n      \"name\": \"Whisker\",\n      \"type\": \"cat\",\n      \"descriptions\": \"Likes hamtaro\"\n    }\n  ]\n}"
      },
      "requestMatchRules": {
        "bodyRules": [
          {
            "rule": {
              "_id": "5d700c3d2cf583ae2b8fc8a3",
              "index": 0,
              "guid": "15c962ae-fed1-4a37-b681-7d956230d9c9",
              "isActive": true,
              "balance": "$2,018.25",
              "picture": "http://placehold.it/32x32",
              "age": 39,
              "eyeColor": "brown",
              "name": "Chavez Merrill",
              "gender": "male",
              "company": "NSPIRE",
              "email": "chavezmerrill@nspire.com",
              "tags": [
                "dolor",
                "sit",
                "magna",
                "exercitation",
                "dolore",
                "eu",
                "pariatur"
              ],
              "friends": [
                {
                  "id": 0,
                  "name": "Buck Wade"
                },
                {
                  "id": 1,
                  "name": "Barry Hancock"
                },
                {
                  "id": 2,
                  "name": "Keith Combs"
                }
              ],
              "greeting": "Hello, Chavez Merrill! You have 10 unread messages.",
              "favoriteFruit": "banana"
            },
            "type": 3
          }
        ],
        "urlRules": [],
        "headerRules": [],
        "queryRules": []
      },
      "policies": []
    },
    {
      "id": "0adac4b9-c984-4b47-9de0-943e3723c5e7",
      "metadata": {
        "title": "Get List Filtered",
        "description": "Gets the list of pets but filters out based on animal type"
      },
      "verb": 0,
      "path": "/pets",
      "response": {
        "headers": {
          "Content-Type": "application/json"
        },
        "status": "200",
        "body": "{\n  \"pets\": [\n    {\n      \"id\": \"1\",\n      \"name\": \"Spot\",\n      \"type\": \"dog\",\n      \"description\": \"Is a good boy\"\n    }\n  ]\n}"
      },
      "requestMatchRules": {
        "urlRules": [],
        "headerRules": [
          {
            "type": 3,
            "rule": {
              "Content-Type": "application/json"
            }
          }
        ],
        "queryRules": [
          {
            "type": 3,
            "rule": {
              "animal-type": "dog"
            }
          }
        ],
        "bodyRules": []
      },
      "policies": []
    },
    {
      "id": "e66ae572-b333-4b2f-a7af-34605ca90f1a",
      "metadata": {
        "title": "Add Pet Success",
        "description": "Successfully added a pet"
      },
      "verb": 3,
      "path": "/pets",
      "response": {
        "headers": {
          "Content-Type": "text/plain"
        },
        "status": "201",
        "body": "Resource Successfully Created"
      },
      "requestMatchRules": {
        "urlRules": [],
        "headerRules": [
          {
            "type": 3,
            "rule": {
              "Content-Type": "application/json"
            }
          }
        ],
        "queryRules": [],
        "bodyRules": [
          {
            "type": 3,
            "rule": {
              "id": "4",
              "name": "Snowflake",
              "type": "cat",
              "description": "Hates Stuart"
            }
          }
        ]
      },
      "policies": []
    },
    {
      "id": "aeebc415-5464-42ba-922c-5b1433ebb8a2",
      "metadata": {
        "title": "Add Pet Failure",
        "description": "Fails to add the pet due to missing type property"
      },
      "verb": 3,
      "path": "/pets",
      "response": {
        "headers": {
          "Content-Type": "text/plain"
        },
        "status": "400",
        "body": "Error: Could not create resource. Missing property \"type\" of pet"
      },
      "requestMatchRules": {
        "urlRules": [],
        "headerRules": [
          {
            "type": 3,
            "rule": {
              "Content-Type": "application/json"
            }
          }
        ],
        "queryRules": [],
        "bodyRules": [
          {
            "type": 3,
            "rule": {
              "id": "4",
              "name": "Snowflake",
              "description": "Hates Stuart"
            }
          }
        ]
      },
      "policies": []
    },
    {
      "id": "aaca1a31-8667-43a7-8cfa-7925dd3b5074",
      "metadata": {
        "title": "Get Pet Success",
        "description": "Successfully gets the pets information"
      },
      "verb": 0,
      "path": "/pets/{petId}",
      "response": {
        "headers": {
          "Content-Type": "application/json"
        },
        "status": "200",
        "body": "{\n      \"id\": \"1\",\n      \"name\": \"Spot\",\n      \"type\": \"dog\",\n      \"description\": \"Is a good boy\"\n}"
      },
      "requestMatchRules": {
        "urlRules": [],
        "headerRules": [
          {
            "type": 3,
            "rule": {
              "Content-Type": "application/json"
            }
          }
        ],
        "queryRules": [],
        "bodyRules": []
      },
      "policies": []
    },
    {
      "id": "4879c798-2a1a-4aaf-a611-329dd1c03fe1",
      "metadata": {
        "title": "Get Pet Not Found",
        "description": "Failed finding the pet via its id"
      },
      "verb": 0,
      "path": "/pets/{petId}",
      "response": {
        "headers": {
          "Content-Type": "text/plain"
        },
        "status": "404",
        "body": "Pet not found. Check that id is correct."
      },
      "requestMatchRules": {
        "urlRules": [],
        "headerRules": [
          {
            "type": 3,
            "rule": {
              "Content-Type": "application/json"
            }
          }
        ],
        "queryRules": [],
        "bodyRules": []
      },
      "policies": []
    }
  ],
  "host": "petstore.swagger.io",
  "basePath": "/v1",
  "openApi": {
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "Swagger Petstore",
      "license": {
        "name": "MIT"
      }
    },
    "host": "petstore.swagger.io",
    "basePath": "/v1",
    "schemes": [
      "http"
    ],
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "paths": {
      "/pets": {
        "get": {
          "summary": "List all pets",
          "operationId": "listPets",
          "tags": [
            "pets"
          ],
          "parameters": [
            {
              "name": "limit",
              "in": "query",
              "description": "How many items to return at one time (max 100)",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "A paged array of pets",
              "headers": {
                "x-next": {
                  "type": "string",
                  "description": "A link to the next page of responses"
                }
              },
              "schema": {
                "$ref": "#/definitions/Pets"
              }
            },
            "default": {
              "description": "unexpected error",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        },
        "post": {
          "summary": "Create a pet",
          "operationId": "createPets",
          "tags": [
            "pets"
          ],
          "responses": {
            "201": {
              "description": "Null response"
            },
            "default": {
              "description": "unexpected error",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        },
        "put": {
          "summary": "Update a pet",
          "operationId": "updatePets",
          "tags": [
            "pets"
          ],
          "responses": {
            "201": {
              "description": "Null response"
            },
            "default": {
              "description": "unexpected error",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      },
      "/pets/{petId}": {
        "get": {
          "summary": "Info for a specific pet",
          "operationId": "showPetById",
          "tags": [
            "pets"
          ],
          "parameters": [
            {
              "name": "petId",
              "in": "path",
              "required": true,
              "description": "The id of the pet to retrieve",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Expected response to a valid request",
              "schema": {
                "$ref": "#/definitions/Pets"
              }
            },
            "default": {
              "description": "unexpected error",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      }
    },
    "definitions": {
      "Pet": {
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          }
        }
      },
      "Pets": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/Pet"
        }
      },
      "Error": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  },
  "metadata": {
    "title": "petstore",
    "description": ""
  }
}