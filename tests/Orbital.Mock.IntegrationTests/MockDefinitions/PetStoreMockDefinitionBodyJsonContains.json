{
  "scenarios": [
    {
      "id": "e66ae572-b333-4b2f-a7af-34605ca90f1a",
      "metadata": {
        "title": "Add Pet Success",
        "description": "Successfully added a pet"
      },
      "verb": 3,
      "path": "/pets",
      "response": {
        "status": 201,
        "body": "Resource Successfully Created",
        "headers": {
          "Content-Type": "text/plain"
        },
        "query": {},
        "type": 1
      },
      "requestMatchRules": {
        "urlRules": [],
        "headerRules": [
          {
            "type": 3,
            "rule": {
              "Content-Type": "application/json"
            }
          }
        ],
        "queryRules": [],
        "bodyRules": [
          {
            "rule": {
              "id": "4",
              "name": "Snowflake",
              "type": "cat",
              "description": "Hates Stuart"
            },
            "type": 3
          }
        ]
      },
      "policies": [],
      "defaultScenario": false
    },
    {
      "id": "aeebc415-5464-42ba-922c-5b1433ebb8a2",
      "metadata": {
        "title": "Add Pet Failure",
        "description": "Fails to add the pet due to missing type property"
      },
      "verb": 3,
      "path": "/pets",
      "response": {
        "status": 400,
        "body": "Error: Could not create resource. Missing property \"type\" of pet",
        "headers": {
          "Content-Type": "text/plain"
        },
        "query": {},
        "type": 1
      },
      "requestMatchRules": {
        "urlRules": [],
        "headerRules": [
          {
            "type": 3,
            "rule": {
              "Content-Type": "application/json"
            }
          }
        ],
        "queryRules": [],
        "bodyRules": [
          {
            "rule": {
              "id": "4",
              "name": "Snowflake",
              "description": "Hates Stuart"
            },
            "type": 3
          }
        ]
      },
      "policies": [],
      "defaultScenario": false
    },
    {
      "id": "aaca1a31-8667-43a7-8cfa-7925dd3b5074",
      "metadata": {
        "title": "Get Pet Success",
        "description": "Successfully gets the pets information"
      },
      "verb": 0,
      "path": "/pets/{petId}",
      "response": {
        "status": 200,
        "body": "{\n      \"id\": \"1\",\n      \"name\": \"Spot\",\n      \"type\": \"dog\",\n      \"description\": \"Is a good boy\"\n}",
        "headers": {
          "Content-Type": "application/json"
        },
        "query": {},
        "type": 1
      },
      "requestMatchRules": {
        "urlRules": [],
        "headerRules": [
          {
            "type": 3,
            "rule": {
              "Content-Type": "application/json"
            }
          }
        ],
        "queryRules": [],
        "bodyRules": []
      },
      "policies": [],
      "defaultScenario": false
    },
    {
      "id": "4879c798-2a1a-4aaf-a611-329dd1c03fe1",
      "metadata": {
        "title": "Get Pet Not Found",
        "description": "Failed finding the pet via its id"
      },
      "verb": 0,
      "path": "/pets/{petId}",
      "response": {
        "status": 404,
        "body": "Pet not found. Check that id is correct.",
        "headers": {
          "Content-Type": "text/plain"
        },
        "query": {},
        "type": 1
      },
      "requestMatchRules": {
        "urlRules": [],
        "headerRules": [
          {
            "type": 3,
            "rule": {
              "Content-Type": "application/json"
            }
          }
        ],
        "queryRules": [],
        "bodyRules": []
      },
      "policies": [],
      "defaultScenario": false
    },
    {
      "id": "61da27a9-4c08-4840-bf91-6deff741b0d2",
      "metadata": {
        "title": "ddsaasd",
        "description": null
      },
      "verb": 0,
      "path": "/pets",
      "response": {
        "status": 200,
        "body": "{\"default\":\"response\"}",
        "headers": {},
        "query": {},
        "type": 1
      },
      "requestMatchRules": {
        "urlRules": [],
        "headerRules": [],
        "queryRules": [],
        "bodyRules": [
          {
            "rule": {
              "default": "response"
            },
            "type": 3
          }
        ]
      },
      "policies": [],
      "defaultScenario": false
    },
    {
      "id": "29107275-436c-4fc2-99ea-5a4dfba33a1e",
      "metadata": {
        "title": "ddsaasd-copy 2",
        "description": null
      },
      "verb": 0,
      "path": "/pets",
      "response": {
        "status": 200,
        "body": "{\"equality-match\":\"success\"}",
        "headers": {},
        "query": {},
        "type": 1
      },
      "requestMatchRules": {
        "urlRules": [],
        "headerRules": [],
        "queryRules": [],
        "bodyRules": [
          {
            "rule": {
              "equality-match": "success"
            },
            "type": 3
          }
        ]
      },
      "policies": [],
      "defaultScenario": false
    },
    {
      "id": "f0923993-5ed8-4049-a8cd-3d535b0c570d",
      "metadata": {
        "title": "contains",
        "description": null
      },
      "verb": 0,
      "path": "/pets",
      "response": {
        "status": 200,
        "body": "{\"pet-matched\":\"true\"}",
        "headers": {},
        "query": {},
        "type": 1
      },
      "requestMatchRules": {
        "urlRules": [],
        "headerRules": [],
        "queryRules": [],
        "bodyRules": [
          {
            "rule": {
              "dog": "yes"
            },
            "type": 4
          }
        ]
      },
      "policies": [],
      "defaultScenario": false
    },
    {
      "id": "7f50ebc5-8d84-467a-ad84-ed7556dbf528",
      "metadata": {
        "title": "contains-for-the-literal",
        "description": null
      },
      "verb": 0,
      "path": "/pets",
      "response": {
        "status": 200,
        "body": "{\"test-contains-fired\":\"true\"}",
        "headers": {},
        "query": {},
        "type": 1
      },
      "requestMatchRules": {
        "urlRules": [],
        "headerRules": [],
        "queryRules": [],
        "bodyRules": [
          {
            "rule": "test-contains",
            "type": 4
          }
        ]
      },
      "policies": [],
      "defaultScenario": false
    },
    {
      "id": "acf9fb68-b597-44e2-a995-c9550b231f5f",
      "metadata": {
        "title": "equality-literal-test",
        "description": null
      },
      "verb": 0,
      "path": "/pets",
      "response": {
        "status": 200,
        "body": "{\"equality-literal-fired\":\"true\"}",
        "headers": {},
        "query": {},
        "type": 1
      },
      "requestMatchRules": {
        "urlRules": [],
        "headerRules": [],
        "queryRules": [],
        "bodyRules": [
          {
            "rule": "equality-literal",
            "type": 3
          }
        ]
      },
      "policies": [],
      "defaultScenario": false
    }
  ],
  "host": null,
  "metadata": {
    "title": "petstore v1",
    "description": ""
  },
  "openApi": {
    "swagger": "2.0",
    "info": {
      "title": "Swagger Petstore",
      "license": {
        "name": "MIT"
      },
      "version": "1.0.0"
    },
    "host": "petstore.swagger.io",
    "basePath": "/v1",
    "schemes": [
      "http"
    ],
    "paths": {
      "/pets": {
        "get": {
          "tags": [
            "pets"
          ],
          "summary": "List all pets",
          "operationId": "listPets",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "query",
              "name": "limit",
              "description": "How many items to return at one time (max 100)",
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "A paged array of pets",
              "schema": {
                "$ref": "#/definitions/Pets"
              },
              "headers": {
                "x-next": {
                  "description": "A link to the next page of responses",
                  "type": "string"
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        },
        "post": {
          "tags": [
            "pets"
          ],
          "summary": "Create a pet",
          "operationId": "createPets",
          "produces": [
            "application/json"
          ],
          "responses": {
            "201": {
              "description": "Null response"
            },
            "default": {
              "description": "unexpected error",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        },
        "put": {
          "tags": [
            "pets"
          ],
          "summary": "Update a pet",
          "operationId": "updatePets",
          "produces": [
            "application/json"
          ],
          "responses": {
            "201": {
              "description": "Null response"
            },
            "default": {
              "description": "unexpected error",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      },
      "/pets/{petId}": {
        "get": {
          "tags": [
            "pets"
          ],
          "summary": "Info for a specific pet",
          "operationId": "showPetById",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "petId",
              "description": "The id of the pet to retrieve",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Expected response to a valid request",
              "schema": {
                "$ref": "#/definitions/Pets"
              }
            },
            "default": {
              "description": "unexpected error",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      }
    },
    "definitions": {
      "Pet": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          }
        }
      },
      "Pets": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/Pet"
        }
      },
      "Error": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "format": "int32",
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}