pool:
  vmImage: 'Ubuntu 16.04'
  
trigger:
  branches:
    include:
      - '*'
    exclude:
      - master
  paths:
    exclude:
      - src/orbital-designer/*
      - azure-pipelines-designer.yml

variables:
  buildConfiguration: 'Release'
  system.debug: true

container: microsoft/dotnet:2.2-sdk

steps:
  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      command: build
      arguments: '--configuration $(buildConfiguration)'
  
  - task: DotNetCoreCLI@2
    displayName: Unit Testing for Mock Server
    inputs:
      command: test
      arguments: '--configuration $(buildConfiguration)
        /p:CollectCoverage=true
        /p:CoverletOutput=$(System.DefaultWorkingDirectory)/mock
        /p:CoverletOutputFormat=cobertura
        /p:Include=[Orbital.*]*
        /p:Exclude=[*.Tests]*
        /p:ExcludeByAttribute=GeneratedCodeAttribute'
      publishTestResults: true
      workingDirectory: tests/Orbital.Mock.Server.Tests
  
  - task: DotNetCoreCLI@2
    displayName: Publishing Mock Server
    inputs:
     command: publish
     arguments: '--configuration $(buildConfiguration) --output $(System.DefaultWorkingDirectory)/mock/build'
     workingDirectory: src/Orbital.Mock.Server/
     publishWebProjects: false
     modifyOutputPath: true
     zipAfterPublish: false

  - script: |
      dotnet tool install dotnet-reportgenerator-globaltool --tool-path . --version 4.1.5
      ./reportgenerator "-reports:$(System.DefaultWorkingDirectory)/mock.cobertura.xml" "-targetdir:$(System.DefaultWorkingDirectory)/results" "-reporttypes:HTMLInline;HTMLChart"
    displayName: Generating Code Coverage Report

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: $(System.DefaultWorkingDirectory)/**/mock.cobertura.xml
      reportDirectory: $(System.DefaultWorkingDirectory)/**/results

  - task: PublishBuildArtifacts@1
    displayName: Publish Build Artifiacts

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: $(System.DefaultWorkingDirectory)/scripts
      artifactName: Scripts
    displayName: Publish Scripts
